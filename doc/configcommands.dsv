always-display-description||[true/false]||false||If true, then the description will always be displayed even if e.g. a content:encoded tag has been found.||always-display-description true
always-download||<url> [<url>]||n/a||The parameters of this configuration command are one or more RSS URLs. These URLs will always get downloaded, regardless of their Last-Modified timestamp and ETag header.||always-download "http://www.n-tv.de/23.rss"
article-sort-order||<sortfield>[-<direction>]||date||The sortfield specifies which article property shall be used for sorting (currently available: date, title, flags, author, link, guid). The optional direction specifies the sort direction ("asc" specifies ascending sorting, "desc" specifies descending sorting. for date, "desc" is default, for all others, "asc" is default).||article-sort-order author-desc
articlelist-format||<format>||"%4i %f %D %6L  %?T?|%-17T|  ?%t"||This variable defines the format of entries in the article list. See the respective section in the documentation for more information on format strings.||articlelist-format "%4i %f %D   %?T?|%-17T|  ?%t"
articlelist-title-format||<format>||"%N %V - Articles in feed '%T' (%u unread, %t total) - %U"||Format of the title in article list. See "Format Strings" section of Newsboat manual for details on available formats.||articlelist-title-format "Articles in feed '%T' (%u unread)"
auto-reload||[yes/no]||no||If enabled, all feeds will be automatically reloaded at start up and then continuously after a certain time has passed (see reload-time).||auto-reload yes
bind-key||<key> <operation> [<dialog>]||n/a||Bind key <key> to <operation>. This means that whenever <key> is pressed, then <operation> is executed (if applicable in the current dialog). A list of available operations can be found below. Optionally, you can specify a dialog. If you specify one, the key binding will only be added to the specified dialog. Available dialogs are "all" (default if none is specified), "feedlist", "filebrowser", "help", "articlelist", "article", "tagselection", "filterselection", "urlview" and "podbeuter".||bind-key ^R reload-all
bookmark-autopilot||[yes/no]||no||If set to yes, the configured bookmark command is executed without any further input asked from user, unless the url or the title cannot be found/guessed.||bookmark-autopilot yes
bookmark-cmd||<command>||""||If set, then <command> will be used as bookmarking plugin. See the documentation on bookmarking for further information.||bookmark-cmd "~/bin/delicious-bookmark.sh"
bookmark-interactive||[yes/no]||no||If set to yes, then the configured bookmark command is an interactive program.||bookmark-interactive yes
browser||<command>||lynx||Set the browser command to use when opening an article in the browser. If <command> contains %u, it will be used as complete commandline and %u will be replaced with the URL that shall be opened.||browser "w3m %u"
cache-file||<path>||"~/.newsboat/cache.db"||This configuration option sets the cache file. This is especially useful if the filesystem of your home directory doesn't support proper locking (e.g. NFS).||cache-file "/tmp/testcache.db"
cleanup-on-quit||[yes/no]||yes||If yes, then the cache gets locked and superfluous feeds and items are removed, such as feeds that can't be found in the urls configuration file anymore.||cleanup-on-quit no
color||<element> <fgcolor> <bgcolor> [<attribute> ...]||n/a||Set the foreground color, background color and optional attributes for a certain element||color background white black
confirm-exit||[yes/no]||no||If set to yes, then newsboat will ask for confirmation whether the user really wants to quit newsboat.||confirm-exit yes
cookie-cache||<path>||""||Set a cookie cache. If set, then cookies will be cached (i.e. read from and written to) in this file.||cookie-cache "~/.newsboat/cookies.txt"
datetime-format||<date/time format>||%b %d||This format specifies the date/time format in the article list. For a detailed documentation on the allowed formats, consult the manpage of strftime(3).||datetime-format "%D, %R"
define-filter||<name> <filterexpr>||n/a||With this command, you can predefine filters, which you can later select from a list, and which are then applied after selection. This is especially useful for filters that you need often and you don't want to enter them every time you need them.||define-filter "all feeds with 'fun' tag" "tags # \"fun\""
delete-read-articles-on-quit||[yes/no]||"no"||If set to "yes", then all read articles will be deleted when you quit newsboat.||delete-read-articles-on-quit yes
dialogs-title-format||<format>||"%N %V - Dialogs"||Format of the title in dialog list. See "Format Strings" section of Newsboat manual for details on available formats.||dialogs-title-format "%N %V - Dialogs"
display-article-progress||[yes/no]||yes||If set to yes, then a read progress (in percent) is displayed in the article view. Otherwise, no read progress is displayed.||display-article-progress no
download-full-page||[yes/no]||no||If set to yes, then for all feed items with no content but with a link, the link is downloaded and the result used as content instead. This may significantly increase the download times of "empty" feeds.||download-full-page yes
download-retries||<number>||1||How many times newsboat shall try to successfully download a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy.||download-retries 4
download-timeout||<number>||30||The number of seconds newsboat shall wait when downloading a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy.||download-timeout 60
error-log||<path>||""||If set, then user errors (e.g. errors regarding defunct RSS feeds) will be logged to this file.||error-log "~/.newsboat/error.log"
external-url-viewer||<command>||""||If set, then "show-urls" will pipe the current article to a specific external tool instead of using the internal URL viewer. This can be used to integrate tools such as urlview.||external-url-viewer "urlview"
feed-sort-order||<sortorder>||none||If set to "firsttag", the feeds in the feed list will be sorted by their first tag in the urls file.||feed-sort-order firsttag
feedhq-flag-share||<flag>||""||If this is set and FeedHQ support is used, then all articles that are flagged with the specified flag are being "shared" in FeedHQ so that people that follow you can see it.||feedhq-flag-share "a"
feedhq-flag-star||<flag>||""||If this is set and FeedHQ support is used, then all articles that are flagged with the specified flag are being "starred" in FeedHQ and appear in the list of "Starred items".||feedhq-flag-star "b"
feedhq-login||<login>||""||This variable sets your FeedHQ login for FeedHQ support.||feedhq-login "your-login"
feedhq-min-items||<number>||20||This variable sets the number of articles that are loaded from FeedHQ per feed.||feedhq-min-items 100
feedhq-password||<password>||""||This variable sets your FeedHQ password for FeedHQ support. Double quotes should be escaped, i.e. you should write +{backslash}"+ instead of +"+.||feedhq-password "here_goesAquote:\""
feedhq-passwordfile||<path>||""||A more secure alternative to the above, by storing your password elsewhere in your system.||feedhq-passwordfile "~/.newsboat/feedhq-pw.txt"
feedhq-passwordeval||<command>||""||Another secure alternative, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring.||feedhq-passwordeval "command some-parameter"
feedhq-show-special-feeds||[yes/no]||yes||If this is set, then "special feeds" like "People you follow" (articles shared by people you follow), "Starred items" (your starred articles) and "Shared items" (your shared articles) appear in your subscription list.||feedhq-show-special-feeds "no"
feedhq-url||<url>||"https://feedhq.org/"||Configures the URL where your FeedHQ instance resides.||feedhq-url "https://feedhq.example.com/"
feedlist-format||<format>||"%4i %n %11u %t"||This variable defines the format of entries in the feed list. See the respective section in the documentation for more information on format strings.||feedlist-format " %n %4i - %11u -%> %t"
feedlist-title-format||<format>||"N %V - Your feeds (%u unread, %t total)%?T? - tag `%T'&?"||Format of the title in feed list. See "Format Strings" section of Newsboat manual for details on available formats.||feedlist-title-format "Feeds (%u unread, %t total)"
filebrowser-title-format||<format>||"%N %V - %?O?Open File&Save File? - %f"||Format of the title in file browser. See "Format Strings" section of Newsboat manual for details on available formats.||filebrowser-title-format "%?O?Open File&Save File? - %f"
goto-first-unread||[yes/no]||yes||If set to yes (the default), then the first unread article will be selected whenever a feed is entered.||goto-first-unread no
goto-next-feed||[yes/no]||yes||If set to yes, then the next-unread, prev-unread and random-unread keys will search in other feeds for unread articles if all articles in the current feed are read. If set to no, then these keys will stop in the current feed.||goto-next-feed no
help-title-format||<format>||"%N %V - Help"||Format of the title in help window. See "Format Strings" section of Newsboat manual for details on available formats.||help-title-format "%N %V - Help"
highlight||<target> <regex> <fgcolor> [<bgcolor> [<attribute> ...]]||n/a||With this command, you can highlight text parts in the feed list, the article list and the article view. For a detailed documentation, see the chapter on highlighting.||highlight all "newsboat" red
highlight-article||<filterexpr> <fgcolor> <bgcolor> [<attribute> ...]||n/a||With this command, you can highlight articles in the article list if they match a filter expression. For a detailed documentation, see the chapter on highlighting.||highlight-article "author =~ \"Andreas Krennmair\"" white red bold
history-limit||<number>||100||Defines the maximum number of entries of commandline resp. search history to be saved. To disable history saving, set history-limit to 0.||history-limit 0
html-renderer||<command>||internal||If set to "internal", then the internal HTML renderer will be used. Otherwise, the specified command will be executed, the HTML to be rendered will be written to the command's stdin, and the program's output will be displayed. This makes it possible to use other, external programs, such as w3m, links or lynx, to render HTML.||html-renderer "w3m -dump -T text/html"
http-auth-method||<method>||any||Set HTTP authentication method. Allowed values: any, basic, digest, digest_ie (only available with libcurl 7.19.3 and newer), gssnegotiate, ntlm, anysafe.||http-auth-method digest
ignore-article||<feed> <filterexpr>||n/a||If a downloaded article from <feed> matches <filterexpr>, then it is ignored and not presented to the user. This command is further explained in the "kill file" section below.||ignore-article "*" "title =~ \"Windows\""
ignore-mode||[download/display]||download||This configuration option defines in what way an article is ignored (see ignore-article). If set to "download", then it is ignored in the download/parsing phase (which is the default) and thus never written to the cache, if it set to "display", it is ignored when displaying articles but is kept in the cache.||ignore-mode "display"
include||<path>||n/a||With this command, you can include other files to be interpreted as configuration files. This is especially useful to separate your configuration into several files, e.g. key configuration, color configuration, ...||include "~/.newsboat/colors"
itemview-title-format||<format>||"%N %V - Article '%T' (%u unread, %t total)"||Format of the title in article view. See "Format Strings" section of Newsboat manual for details on available formats.||itemview-title-format "Article '%T'"
inoreader-flag-share||<flag>||""||If this is set and Inoreader support is used, then all articles that are flagged with the specified flag are being "shared" in Inoreader so that people that follow you can see it.||inoreader-flag-share "a"
inoreader-flag-star||<flag>||""||If this is set and Inoreader support is used, then all articles that are flagged with the specified flag are being "starred" in Inoreader and appear in the list of "Starred items".||inoreader-flag-star "b"
inoreader-login||<login>||""||This variable sets your Inoreader login for Inoreader support.||inoreader-login "your-login"
inoreader-min-items||<number>||20||This variable sets the number of articles that are loaded from Inoreader per feed.||inoreader-min-items 100
inoreader-password||<password>||""||This variable sets your Inoreader password for Inoreader support. Double quotes should be escaped, i.e. you should write +{backslash}"+ instead of +"+.||inoreader-password "here_goesAquote:\""
inoreader-passwordfile||<path>||""||A more secure alternative to the above, by storing your password elsewhere in your system.||inoreader-passwordfile "~/.newsboat/inoreader-pw.txt"
inoreader-passwordeval||<command>||""||Another secure alternative, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring.||inoreader-passwordeval "command some-parameter"
inoreader-show-special-feeds||[yes/no]||yes||If this is set, then "special feeds" like "Starred items" (your starred articles) and "Shared items" (your shared articles) appear in your subscription list.||inoreader-show-special-feeds "no"
keep-articles-days||<number>||0||If set to a number greater than 0, only articles that are were published within the last <number> days are kept, and older articles are deleted. If set to 0 (default value), this option is not active. Note that changing this setting won't bring back the articles that were deleted earlier; currently, there's no non-hacky way to bring back deleted articles.||keep-articles-days 30
macro||<macro key> <command list>||n/a||With this command, you can define a macro key and specify a list of commands that shall be executed when the macro prefix and the macro key are pressed.||macro k open ; reload ; quit
mark-as-read-on-hover||[yes/no]||no||If set to yes, then all articles that get selected in the article list are marked as read.||mark-as-read-on-hover yes
max-download-speed||<number>||0||If set to a number great than 0, the download speed per download is set to that limit (in kB).||max-download-speed 50
max-browser-tabs||<number>||10||Set the maximum number of articles to open in a browser when using the open-all-unread-in-browser or open-all-unread-in-browser-and-mark-read commands.||max-browser-tabs 4
max-items||<number>||0||Set the number of articles to maximally keep per feed. If the number is set to 0, then all articles are kept.||max-items 100
newsblur-login||<login>||""||This variable sets your NewsBlur login for NewsBlur support.||newsblur-login "your-login"
newsblur-min-items||<number>||20||This variable sets the number of articles that are loaded from NewsBlur per feed.||newsblur-min-items 100
newsblur-password||<password>||""||This variable sets your NewsBlur password for Newsblur support. Double quotes should be escaped, i.e. you should write +{backslash}"+ instead of +"+.||newsblur-password "here_goesAquote:\""
newsblur-passwordfile||<path>||""||A more secure alternative to the above, by storing your password elsewhere in your system.||newsblur-passwordfile "~/.newsboat/newsblur-pw.txt"
newsblur-passwordeval||<command>||""||Another secure alternative, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring.||newsblur-passwordeval "command some-parameter"
newsblur-url||<url>||"https://newsblur.com"||Configures the URL where the newsblur instance resides.||newsblur-url "https://localhost"
notify-always||[yes/no]||no||If no, notifications will only be made when there are new feeds or articles. If yes, notifications will be made regardless.||notify-always yes
notify-beep||[yes/no]||no||If yes, then the speaker beep on new articles.||notify-beep yes
notify-format||<string>||"newsboat: finished reload, %f unread feeds (%n unread articles total)"||Format string that is used for formatting notifications. See the chapter on format strings for more information.||notify-format "%d new articles (%n unread articles, %f unread feeds)"
notify-program||<command>||""||If set, then the configured program will be executed if new articles arrived (through a reload) or if notify-always is true. The first parameter of the called program contains the notification message.||notify-program "~/bin/my-notifier"
notify-screen||[yes/no]||no||If yes, then a "privacy message" will be sent to the terminal, containing a notification message about new articles. This is especially useful if you use terminal emulations such as GNU screen which implement privacy messages.||notify-screen yes
notify-xterm||[yes/no]||no||If yes, then the xterm window title will be set to a notification message about new articles.||notify-xterm yes
ocnews-flag-star||<character>||""||If this is set and ownCloud News support is used, then all articles that are flagged with the specified flag are being "starred" in ownCloud News.||ocnews-flag-star "s"
ocnews-login||<username>||""||Sets the username to use with the ownCloud instance.||ocnews-login "user"
ocnews-password||<password>||""||Configures the password to use with the ownCloud instance. Double quotes should be escaped, i.e. you should write +{backslash}"+ instead of +"+.||ocnews-password "here_goesAquote:\""
ocnews-passwordfile||<path>||""||A more secure alternative to the above, by storing your password elsewhere in your system.||ocnews-passwordfile "~/.newsboat/ocnews-pw.txt"
ocnews-passwordeval||<command>||""||Another secure alternative, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring.||ocnews-passwordeval "command some-parameter"
ocnews-url||<url>||""||Configures the URL where the ownCloud instance resides.||ocnews-url "https://localhost/owncloud"
oldreader-flag-share||<flag>||""||If this is set and The Old Reader support is used, then all articles that are flagged with the specified flag are being "shared" in The Old Reader so that people that follow you can see it.||oldreader-flag-share "a"
oldreader-flag-star||<flag>||""||If this is set and The Old Reader support is used, then all articles that are flagged with the specified flag are being "starred" in The Old Reader and appear in the list of "Starred items".||oldreader-flag-star "b"
oldreader-login||<login>||""||This variable sets your The Old Reader login for The Older Reader support.||oldreader-login "your-login"
oldreader-min-items||<number>||20||This variable sets the number of articles that are loaded from The Old Reader per feed.||oldreader-min-items 100
oldreader-password||<password>||""||This variable sets your The Old Reader password for The Old Reader support. Double quotes should be escaped, i.e. you should write +{backslash}"+ instead of +"+.||oldreader-password "here_goesAquote:\""
oldreader-passwordfile||<path>||""||A more secure alternative to the above, by storing your password elsewhere in your system.||oldreader-passwordfile "~/.newsboat/oldreader-pw.txt"
oldreader-passwordeval||<command>||""||Another secure alternative, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring.||oldreader-passwordeval "command some-parameter"
oldreader-show-special-feeds||[yes/no]||yes||If this is set, then "special feeds" like "People you follow" (articles shared by people you follow), "Starred items" (your starred articles) and "Shared items" (your shared articles) appear in your subscription list.||oldreader-show-special-feeds "no"
openbrowser-and-mark-jumps-to-next-unread||[yes/no]||no||If set to yes, jump to the next unread item when an item is opened in the browser and marked as read.||openbrowser-and-mark-jumps-to-next-unread yes
opml-url||<url> ...||""||If the OPML online subscription mode is enabled, then the list of feeds will be taken from the OPML file found on this location. Optionally, you can specify more than one URL. All the listed OPML URLs will then be taken into account when loading the feed list.||opml-url "http://host.domain.tld/blogroll.opml" "http://example.com/anotheropmlfile.opml"
pager||[<command>/internal]||internal||If set to "internal", then the internal pager will be used. Otherwise, the article to be displayed will be rendered to be a temporary file and then displayed with the configured pager. If the command is set to an empty string, the content of the "PAGER" environment variable will be used. If the command contains a placeholder "%f", it will be replaced with the temporary filename.||pager "less %f"
podcast-auto-enqueue||[yes/no]||no||If yes, then all podcast URLs that are found in articles are added to the podcast download queue. See the respective section in the documentation for more information on podcast support in newsboat.||podcast-auto-enqueue yes
prepopulate-query-feeds||[yes/no]||no||If yes, then all query feeds are prepopulated with articles on startup.||prepopulate-query-feeds yes
ssl-verifyhost||[yes/no]||yes||If no, skip verification of the certificate's name against host.||ssl-verifyhost no
ssl-verifypeer||[yes/no]||yes||If no, skip verification of the peer's SSL certificate.||ssl-verifypeer no
proxy-auth-method||<method>||any||Set proxy authentication method. Allowed values: any, basic, digest, digest_ie (only available with libcurl 7.19.3 and newer), gssnegotiate, ntlm, anysafe.||proxy-auth-method ntlm
proxy-auth||<auth>||n/a||Set the proxy authentication string.||proxy-auth user:password
proxy-type||<type>||http||Set proxy type. Allowed values: http, socks4, socks4a, socks5, socks5h.||proxy-type socks5
proxy||<server:port>||n/a||Set the proxy to use for downloading RSS feeds. (Don't forget to actually enable the proxy with `use-proxy yes`.)||proxy localhost:3128
refresh-on-startup||[yes/no]||no||If yes, then all feeds will be reloaded when newsboat starts up. This is equivalent to the -r commandline option.||refresh-on-startup yes
reload-only-visible-feeds||[yes/no]||no||If yes, then manually reloading all feeds will only reload the currently visible feeds, e.g. if a filter or a tag is set.||reload-only-visible-feeds yes
reload-threads||<number>||1||The number of parallel reload threads that shall be started when all feeds are reloaded.||reload-threads 3
reload-time||<number>||60||The number of minutes between automatic reloads.||reload-time 120
reset-unread-on-update||<url> ...||n/a||With this configuration command, you can provide a list of RSS feed URLs for whose articles the unread flag will be reset if an article has been updated, i.e. its content has been changed. This is especially useful for RSS feeds where single articles are updated after publication, and you want to be notified of the updates.||reset-unread-on-update "http://blog.fefe.de/rss.xml?html"
save-path||<path-to-directory>||~/||The default path where articles shall be saved to. If an invalid path is specified, the current directory is used.||save-path "~/Saved Articles"
search-highlight-colors||<fgcolor> <bgcolor> [<attribute> ...]||black yellow bold||This configuration command specifies the highlighting colors when searching for text from the article view.||search-highlight-colors white black bold
searchresult-title-format||<format>||"%N %V - Search result (%u unread, %t total)"||Format of the title in search result. See "Format Strings" section of Newsboat manual for details on available formats.||searchresult-title-format "Search result"
selectfilter-title-format||<format>||"%N %V - Select Filter"||Format of the title in filter selection dialog. See "Format Strings" section of Newsboat manual for details on available formats.||selectfilter-title-format "Select Filter"
selecttag-title-format||<format>||"%N %V - Select Tag"||Format of the title in tag selection dialog. See "Format Strings" section of Newsboat manual for details on available formats.||selecttag-title-format "Select Tag"
show-keymap-hint||[yes/no]||yes||If no, then the keymap hints on the bottom of screen will not be displayed.||show-keymap-hint no
show-read-articles||[yes/no]||yes||If yes, then all articles of a feed are listed in the article list. If no, then only unread articles are listed.||show-read-articles no
show-read-feeds||[yes/no]||yes||If yes, then all feeds, including those without unread articles, are listed. If no, then only feeds with one or more unread articles are list.||show-read-feeds no
suppress-first-reload||[yes/no]||no||If yes, then the first automatic reload will be suppressed if auto-reload is set to yes.||suppress-first-reload yes
swap-title-and-hints||[yes/no]||no||If yes, then the title at the top of screen and keymap hints at the bottom of screen will be swapped.||swap-title-and-hints yes
text-width||<number>||0||If set to a number greater than 0, all HTML will be rendered to this maximum line length or the terminal width (whichever is smaller). If set to 0, the terminal width will always be used. Does not apply when using external renderer or viewing the source. Also note that "Link" header and "Links" section won't be affected by it—they contain URLs which are better not wrapped.||text-width 72
toggleitemread-jumps-to-next-unread||[yes/no]||no||If set to yes, jump to the next unread item when an item's read status is toggled in the articlelist.||toggleitemread-jumps-to-next-unread yes
ttrss-flag-publish||<character>||""||If this is set and Tiny Tiny RSS support is used, then all articles that are flagged with the specified flag are being marked as "published" in Tiny Tiny RSS.||ttrss-flag-publish "b"
ttrss-flag-star||<character>||""||If this is set and Tiny Tiny RSS support is used, then all articles that are flagged with the specified flag are being "starred" in Tiny Tiny RSS.||ttrss-flag-star "a"
ttrss-login||<username>||""||Sets the username for use with Tiny Tiny RSS.||ttrss-login "admin"
ttrss-mode||[multi/single]||multi||Configures the mode in which Tiny Tiny RSS is used. In single-user mode, login and password are used for HTTP authentication, while in multi-user mode, they are used for authenticating with Tiny Tiny RSS.||ttrss-mode "single"
ttrss-password||<password>||""||Configures the password for use with Tiny Tiny RSS. Double quotes should be escaped, i.e. you should write +{backslash}"+ instead of +"+.||ttrss-password "here_goesAquote:\""
ttrss-passwordfile||<path>||""||A more secure alternative to the above, by storing your password elsewhere in your system.||ttrss-passwordfile "~/.newsboat/ttrss-pw.txt"
ttrss-passwordeval||<command>||""||Another secure alternative, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring.||ttrss-passwordeval "command some-parameter"
ttrss-url||<url>||""||Configures the URL where the Tiny Tiny RSS installation you want to use resides.||ttrss-url "http://example.com/ttrss/"
unbind-key||<key> [<dialog>]||n/a||Unbind key <key>. This means that no operation is called when <key> is pressed. Optionally, you can specify a dialog (for a list of available dialogs, see "bind-key" above). If you specify one, the key binding will only be unbound for the specified dialog.||unbind-key R
urls-source||<source>||"local"||This configuration command sets the source where URLs shall be retrieved from. By default, this is ~/.newsboat/urls. Alternatively, you can set it to "opml", which enables newsboat's OPML online subscription mode, to "ttrss" which enables newsboat's Tiny Tiny RSS support, to "oldreader", which enables newsboat's The Old Reader support, to "newsblur", which enables NewsBlur support, or "feedhq" for FeedHQ support, or "ocnews" for ownCloud News support. Query feed specifications will be read from the local urls file regardless of this setting.||urls-source "oldreader"
urlview-title-format||<format>||"%N %V - URLs"||Format of the title in URL view. See "Format Strings" section of Newsboat manual for details on available formats.||urlview-title-format "URLs"
use-proxy||[yes/no]||no||If yes, then the configured proxy will be used for downloading the RSS feeds.||use-proxy yes
user-agent||<string>||""||If set to a non-zero-length string, this value will be used as HTTP User-Agent header for all HTTP requests.||user-agent "Lynx/2.8.5rel.1 libwww-FM/2.14"
